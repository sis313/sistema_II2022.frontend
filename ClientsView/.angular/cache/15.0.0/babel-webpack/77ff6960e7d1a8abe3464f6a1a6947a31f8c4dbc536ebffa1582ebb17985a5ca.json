{"ast":null,"code":"import _asyncToGenerator from \"/Users/ignaciopaz/University/DevWork/ProjectFinal/sistema_II2022.frontend/ClientsView/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Map, marker, tileLayer, Icon } from 'leaflet';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Service/branch.service\";\nimport * as i2 from \"src/app/Service/location.service\";\nimport * as i3 from \"src/app/Service/category.service\";\nimport * as i4 from \"@angular/platform-browser\";\nimport * as i5 from \"@angular/common\";\nfunction MapComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\");\n    i0.ɵɵelement(2, \"input\", 12);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", item_r1.name, \" \");\n  }\n}\nexport class MapComponent {\n  // userIcon = new this.LeafIcon({iconUrl: this.assetsLocation + '/marker/user.png'});\n  constructor(branchService, locationService, categoryService, titleService) {\n    this.branchService = branchService;\n    this.locationService = locationService;\n    this.categoryService = categoryService;\n    this.titleService = titleService;\n    //Assets Location Folder\n    this.assetsLocation = '../../../assets/map';\n    this.locationD = [];\n    this.branchD = [];\n    this.titleService.setTitle('Mapa | BO Active');\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      //Get actual position\n      _this.actualPos = yield _this.getLocation();\n      //Fetch all categories\n      yield _this.fetchAllCategories();\n      //Charge all branches\n      yield _this.onCharge();\n      //Create the map\n      _this.mainMap = yield new Map('map').setView([_this.actualPos.lat, _this.actualPos.lng], 20);\n      //Add the tile layer\n      tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        maxZoom: 16,\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(_this.mainMap);\n      //Create user Icon\n      let userIcon = new Icon({\n        iconUrl: _this.assetsLocation + '/marker/user.png',\n        iconSize: [20, 30]\n      });\n      //Create the user marker\n      marker([_this.actualPos.lat, _this.actualPos.lng], {\n        icon: userIcon\n      }).addTo(_this.mainMap);\n      //Create the branch markers\n      _this.branchD.forEach(item => {\n        let test = item;\n        let markerTest = marker([test.latitude, test.longitude]);\n        markerTest.bindPopup(`<b class=\"popup-title\">${test.businessName}</b>\n          <div>${test.address}</div>\n          <img src=\"${test.image}\">`).openPopup();\n        markerTest.addTo(_this.mainMap);\n      });\n    })();\n  }\n  onCharge() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      yield _this2.branchService.getAllBranch().toPromise().then(data => {\n        _this2.branchD = data;\n        _this2.branchService.setBranchName(_this2.branchD);\n        // console.log(this.branchService.getBranchName());\n      });\n    })();\n  }\n\n  getLocation() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      let poss;\n      yield _this3.locationService.getPosition().then(pos => {\n        console.log(pos);\n        poss = pos;\n      });\n      return poss;\n    })();\n  }\n  fetchAllCategories() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      yield _this4.categoryService.getAllCategories().toPromise().then(data => {\n        _this4.categoryService.setCategoryName(data);\n        console.log(_this4.categoryService.getCategoryName());\n      });\n    })();\n  }\n  getAllCategories() {\n    return this.categoryService.getCategoryName();\n  }\n  /**\n   *\n   * Center the map in display\n   *\n   * @returns void\n   *\n   */\n  centerMap() {\n    this.mainMap.flyTo([this.actualPos.lat, this.actualPos.lng], 16);\n  }\n}\nMapComponent.ɵfac = function MapComponent_Factory(t) {\n  return new (t || MapComponent)(i0.ɵɵdirectiveInject(i1.BranchService), i0.ɵɵdirectiveInject(i2.LocationService), i0.ɵɵdirectiveInject(i3.CategoryService), i0.ɵɵdirectiveInject(i4.Title));\n};\nMapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MapComponent,\n  selectors: [[\"app-map\"]],\n  decls: 16,\n  vars: 1,\n  consts: [[1, \"m-5\"], [1, \"center\", \"title\"], [1, \"row\"], [1, \"col-8\"], [1, \"btn\", \"bo-info\", 3, \"click\"], [1, \"bi-solid\", \"bi-compass-fill\"], [1, \"map-container\"], [\"id\", \"map\"], [1, \"col\", \"mt-5\"], [1, \"center\", \"sub-title\"], [\"class\", \"ml-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"ml-4\"], [\"type\", \"checkbox\", \"value\", \"\", \"id\", \"\", \"checked\", \"\", 1, \"form-check-input\"]],\n  template: function MapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Servicios cerca de ti\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"hr\");\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function MapComponent_Template_button_click_6_listener() {\n        return ctx.centerMap();\n      });\n      i0.ɵɵelement(7, \"i\", 5);\n      i0.ɵɵelementStart(8, \"b\");\n      i0.ɵɵtext(9, \" Centrar Mapa\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 6);\n      i0.ɵɵelement(11, \"div\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 8)(13, \"h1\", 9);\n      i0.ɵɵtext(14, \"Filtrar por categorias\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(15, MapComponent_div_15_Template, 4, 1, \"div\", 10);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.getAllCategories());\n    }\n  },\n  dependencies: [i5.NgForOf],\n  styles: [\"#map[_ngcontent-%COMP%] { height: 600px; }\\n\\n.leaflet-popup-content[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{\\n    width: 100%;\\n}\\n\\n.popup-title[_ngcontent-%COMP%]{\\n    font-size: 20px;\\n}\\n\\n.title[_ngcontent-%COMP%]{\\n    font-size: 36px;\\n    font-weight: 900;\\n}\\n\\n.sub-title[_ngcontent-%COMP%]{\\n    font-size: 26px;\\n    font-weight: 700;\\n}\\n\\n.map-container[_ngcontent-%COMP%]{\\n    border: 5px solid #85cbcc;\\n    border-radius: 10px;\\n    margin-top: 10px;\\n}\\n.bo-info[_ngcontent-%COMP%] {\\n    background-color: #85cbcc;\\n    border-color: #85cbcc;\\n    color: #fff;\\n}\\n\\n\\n.bo-info[_ngcontent-%COMP%]:hover {\\n    background-color: #fff;\\n    border-color: #85cbcc;\\n    color: #85cbcc;\\n}\\n/*# sourceURL=webpack://./src/app/View/map/map.component.css */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvVmlldy9tYXAvbWFwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBR0EsT0FBTyxhQUFhLEVBQUU7O0FBRXRCO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLG1CQUFtQjtJQUNuQixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLHlCQUF5QjtJQUN6QixxQkFBcUI7SUFDckIsV0FBVztBQUNmOzs7QUFHQTtJQUNJLHNCQUFzQjtJQUN0QixxQkFBcUI7SUFDckIsY0FBYztBQUNsQiIsInNvdXJjZXNDb250ZW50IjpbIlxuXG5cbiNtYXAgeyBoZWlnaHQ6IDYwMHB4OyB9XG5cbi5sZWFmbGV0LXBvcHVwLWNvbnRlbnQgaW1ne1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4ucG9wdXAtdGl0bGV7XG4gICAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4udGl0bGV7XG4gICAgZm9udC1zaXplOiAzNnB4O1xuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG59XG5cbi5zdWItdGl0bGV7XG4gICAgZm9udC1zaXplOiAyNnB4O1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi5tYXAtY29udGFpbmVye1xuICAgIGJvcmRlcjogNXB4IHNvbGlkICM4NWNiY2M7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuLmJvLWluZm8ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM4NWNiY2M7XG4gICAgYm9yZGVyLWNvbG9yOiAjODVjYmNjO1xuICAgIGNvbG9yOiAjZmZmO1xufVxuXG5cbi5iby1pbmZvOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIGJvcmRlci1jb2xvcjogIzg1Y2JjYztcbiAgICBjb2xvcjogIzg1Y2JjYztcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["Map","marker","tileLayer","Icon","i0","MapComponent","constructor","branchService","locationService","categoryService","titleService","setTitle","ngOnInit","actualPos","getLocation","fetchAllCategories","onCharge","mainMap","setView","lat","lng","maxZoom","attribution","addTo","userIcon","iconUrl","assetsLocation","iconSize","icon","branchD","forEach","item","test","markerTest","latitude","longitude","bindPopup","businessName","address","image","openPopup","getAllBranch","toPromise","then","data","setBranchName","poss","getPosition","pos","console","log","getAllCategories","setCategoryName","getCategoryName","centerMap","flyTo","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/ignaciopaz/University/DevWork/ProjectFinal/sistema_II2022.frontend/ClientsView/src/app/View/map/map.component.ts","/Users/ignaciopaz/University/DevWork/ProjectFinal/sistema_II2022.frontend/ClientsView/src/app/View/map/map.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Map, marker, tileLayer, Icon } from 'leaflet';\nimport { Branch } from 'src/app/Model/branch.model';\nimport { BranchService } from 'src/app/Service/branch.service';\nimport { LocationService } from 'src/app/Service/location.service';\nimport { CategoryService } from 'src/app/Service/category.service';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css'],\n})\nexport class MapComponent implements OnInit {\n  //Assets Location Folder\n  assetsLocation: string = '../../../assets/map';\n\n  locationD: Location[] = [];\n  branchD: Branch[] = [];\n\n  //Map variables\n  actualPos: any;\n  mainMap: any;\n  // userIcon = new this.LeafIcon({iconUrl: this.assetsLocation + '/marker/user.png'});\n\n  constructor(\n    private branchService: BranchService,\n    private locationService: LocationService,\n    private categoryService: CategoryService,\n    private titleService: Title\n  ) {\n    this.titleService.setTitle('Mapa | BO Active');\n  }\n\n  async ngOnInit() {\n    //Get actual position\n    this.actualPos = await this.getLocation();\n\n    //Fetch all categories\n    await this.fetchAllCategories();\n\n    //Charge all branches\n    await this.onCharge();\n\n    //Create the map\n    this.mainMap = await new Map('map').setView(\n      [this.actualPos.lat, this.actualPos.lng],\n      20\n    );\n\n    //Add the tile layer\n    tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 16,\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(this.mainMap);\n\n    //Create user Icon\n    let userIcon = new Icon({\n      iconUrl: this.assetsLocation + '/marker/user.png',\n      iconSize: [20, 30],\n    });\n\n    //Create the user marker\n    marker([this.actualPos.lat, this.actualPos.lng], { icon: userIcon }).addTo(\n      this.mainMap\n    );\n\n    //Create the branch markers\n    this.branchD.forEach((item) => {\n      let test = item;\n      let markerTest = marker([test.latitude, test.longitude]);\n\n      markerTest\n        .bindPopup(\n          `<b class=\"popup-title\">${test.businessName}</b>\n          <div>${test.address}</div>\n          <img src=\"${test.image}\">`\n        )\n        .openPopup();\n      markerTest.addTo(this.mainMap);\n    });\n  }\n\n  async onCharge() {\n    await this.branchService\n      .getAllBranch()\n      .toPromise()\n      .then((data) => {\n        this.branchD = data;\n        this.branchService.setBranchName(this.branchD);\n        // console.log(this.branchService.getBranchName());\n      });\n  }\n\n  async getLocation() {\n    let poss;\n    await this.locationService.getPosition().then((pos) => {\n      console.log(pos);\n      poss = pos;\n    });\n    return poss;\n  }\n\n  async fetchAllCategories() {\n    await this.categoryService\n      .getAllCategories()\n      .toPromise()\n      .then((data) => {\n        this.categoryService.setCategoryName(data);\n        console.log(this.categoryService.getCategoryName());\n      });\n  }\n\n  getAllCategories() {\n    return this.categoryService.getCategoryName();\n  }\n\n  /**\n   *\n   * Center the map in display\n   *\n   * @returns void\n   *\n   */\n  centerMap() {\n    this.mainMap.flyTo([this.actualPos.lat, this.actualPos.lng], 16);\n  }\n}\n","<div class=\"m-5\">\n  <h1 class=\"center title\">Servicios cerca de ti</h1>\n  <hr>\n  <div class=\"row\">\n\n    <div class=\"col-8\">\n      <button class=\"btn bo-info\" (click)=\"centerMap()\">\n        <i class=\"bi-solid bi-compass-fill\"></i>\n        <b> Centrar Mapa</b>\n      </button>\n      <div class=\"map-container\">\n        <div id=\"map\"></div>\n      </div>\n    </div>\n    <div class=\"col mt-5\">\n\n      <h1 class=\"center sub-title\">Filtrar por categorias</h1>\n      <div class=\"ml-4\" *ngFor=\"let item of getAllCategories()\">\n        <div>\n          <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"\" checked>\n          {{item.name}}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}