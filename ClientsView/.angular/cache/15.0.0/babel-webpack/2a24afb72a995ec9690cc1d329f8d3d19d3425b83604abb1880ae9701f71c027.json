{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CommentService {\n  constructor(http) {\n    this.http = http;\n    this.comment = [];\n    this.url = 'https://serviceprojectspring.herokuapp.com';\n  }\n  setComment(data) {\n    this.comment = data;\n  }\n  getComment() {\n    return this.comment;\n  }\n  getCommentStore(idStore) {\n    let user = Number(localStorage.getItem('token'));\n    return this.http.get(this.url + `/api/comment/?businessId=${idStore}`);\n  }\n  setCommentHttp(data) {\n    const httpOptions = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    const dataBackend = JSON.stringify(data);\n    console.log(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\");\n    console.log(dataBackend);\n    return this.http.post(this.url + '/api/comment', data, {\n      headers: httpOptions\n    });\n  }\n  updateCommentHttp(data, idComment) {\n    return this.http.put(this.url + `/api/comment/${idComment}`, data);\n  }\n  deleteCommentHttp(idComment) {\n    console.log(\"llegamos a antes de eliminar\");\n    const httpOptions = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.delete(this.url + `/api/comment/${idComment}`);\n  }\n}\nCommentService.ɵfac = function CommentService_Factory(t) {\n  return new (t || CommentService)(i0.ɵɵinject(i1.HttpClient));\n};\nCommentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CommentService,\n  factory: CommentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,cAAc;EAGvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,YAAO,GAAa,EAAE;IACrB,QAAG,GAAW,4CAA4C;EACpB;EACvCC,UAAU,CAACC,IAAe;IACtB,IAAI,CAACC,OAAO,GAAGD,IAAI;EACvB;EACAE,UAAU;IACN,OAAO,IAAI,CAACD,OAAO;EACvB;EACAE,eAAe,CAACC,OAAe;IAC3B,IAAIC,IAAI,GAAEC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC/C,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAM,IAAI,CAACC,GAAG,GAAC,4BAA4BN,OAAO,EAAE,CAAC;EAC7E;EACAO,cAAc,CAACX,IAAa;IACxB,MAAMY,WAAW,GAAG,IAAIjB,WAAW,CAAC;MAAC,cAAc,EAAE;IAAkB,CAAC,CAAC;IACzE,MAAMkB,WAAW,GAAGC,IAAI,CAACC,SAAS,CAACf,IAAI,CAAC;IACxCgB,OAAO,CAACC,GAAG,CAAC,0DAA0D,CAAC;IACvED,OAAO,CAACC,GAAG,CAACJ,WAAW,CAAC;IACxB,OAAO,IAAI,CAACf,IAAI,CAACoB,IAAI,CAAU,IAAI,CAACR,GAAG,GAAC,cAAc,EAACV,IAAI,EAAE;MAACmB,OAAO,EAAGP;IAAW,CAAC,CAAC;EAGzF;EACAQ,iBAAiB,CAACpB,IAAY,EAACqB,SAAgB;IAC3C,OAAO,IAAI,CAACvB,IAAI,CAACwB,GAAG,CAAU,IAAI,CAACZ,GAAG,GAAC,gBAAgBW,SAAS,EAAE,EAACrB,IAAI,CAAC;EAC5E;EAEAuB,iBAAiB,CAACF,SAAgB;IAC9BL,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3C,MAAML,WAAW,GAAG,IAAIjB,WAAW,CAAC;MAAC,cAAc,EAAE;IAAkB,CAAC,CAAC;IACzE,OAAO,IAAI,CAACG,IAAI,CAAC0B,MAAM,CAAO,IAAI,CAACd,GAAG,GAAC,gBAAgBW,SAAS,EAAE,CAAC;EACvE;;;mBA/BSzB,cAAc;AAAA;;SAAdA,cAAc;EAAA6B,SAAd7B,cAAc;EAAA8B,YAFX;AAAM","names":["HttpHeaders","CommentService","constructor","http","setComment","data","comment","getComment","getCommentStore","idStore","user","Number","localStorage","getItem","get","url","setCommentHttp","httpOptions","dataBackend","JSON","stringify","console","log","post","headers","updateCommentHttp","idComment","put","deleteCommentHttp","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/ignaciopaz/University/DevWork/ProjectFinal/sistema_II2022.frontend/ClientsView/src/app/Service/comment.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Comment } from \"../Model/comment.model\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CommentService {\n    comment : Comment[]=[];\n     url: string = 'https://serviceprojectspring.herokuapp.com';\n    constructor(private http: HttpClient) {}\n    setComment(data: Comment[]) {\n        this.comment = data;\n    }\n    getComment(){\n        return this.comment;\n    }\n    getCommentStore(idStore: number){\n        let user= Number(localStorage.getItem('token'));\n        return this.http.get<any>(this.url+`/api/comment/?businessId=${idStore}`)\n    }\n    setCommentHttp(data: Comment): Observable<any>{\n        const httpOptions = new HttpHeaders({'Content-Type': 'application/json'}); \n        const dataBackend = JSON.stringify(data);\n        console.log(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\");\n        console.log(dataBackend);\n        return this.http.post<Comment>(this.url+'/api/comment',data, {headers : httpOptions});\n           \n        \n    }\n    updateCommentHttp(data:Comment,idComment:number): Observable<any>{\n        return this.http.put<Comment>(this.url+`/api/comment/${idComment}`,data);\n    }\n\n    deleteCommentHttp(idComment:number){\n        console.log(\"llegamos a antes de eliminar\");\n        const httpOptions = new HttpHeaders({'Content-Type': 'application/json'}); \n        return this.http.delete<void>(this.url+`/api/comment/${idComment}`);\n    }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}