{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LocationService {\n  constructor(http) {\n    this.http = http;\n    this.store = [];\n    this.storeTemp = [];\n  }\n  setStoreName(data) {\n    this.store = data;\n  }\n  getStoreName() {\n    return this.store;\n  }\n  setStoreTemp(data) {\n    this.storeTemp = data;\n  }\n  getStoreTemp() {\n    return this.storeTemp;\n  }\n  getAllLocations() {\n    return this.http.get('https://serviceprojectspring.herokuapp.com/api/location');\n  }\n  getPosition() {\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(resp => {\n        resolve({\n          lng: resp.coords.longitude,\n          lat: resp.coords.latitude\n        });\n      }, err => {\n        reject(err);\n      });\n    });\n  }\n}\nLocationService.ɵfac = function LocationService_Factory(t) {\n  return new (t || LocationService)(i0.ɵɵinject(i1.HttpClient));\n};\nLocationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LocationService,\n  factory: LocationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,UAAU,QAAqB,sBAAsB;;;AAO9D,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,UAAK,GAAe,EAAE;IACtB,cAAS,GAAe,EAAE;EACa;EACvCC,YAAY,CAACC,IAAgB;IAC3B,IAAI,CAACC,KAAK,GAAGD,IAAI;EACnB;EACAE,YAAY;IACV,OAAO,IAAI,CAACD,KAAK;EACnB;EACAE,YAAY,CAACH,IAAgB;IAC3B,IAAI,CAACI,SAAS,GAAGJ,IAAI;EACvB;EACAK,YAAY;IACV,OAAO,IAAI,CAACD,SAAS;EACvB;EAEAE,eAAe;IACb,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAClB,yDAAyD,CAC1D;EACH;EAEAC,WAAW;IACT,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACrCC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,IAAI,IAAI;QACPL,OAAO,CAAC;UAAEM,GAAG,EAAED,IAAI,CAACE,MAAM,CAACC,SAAS;UAAEC,GAAG,EAAEJ,IAAI,CAACE,MAAM,CAACG;QAAQ,CAAE,CAAC;MACpE,CAAC,EACAC,GAAG,IAAI;QACNV,MAAM,CAACU,GAAG,CAAC;MACb,CAAC,CACF;IACH,CAAC,CAAC;EACJ;;;mBAlCWzB,eAAe;AAAA;;SAAfA,eAAe;EAAA0B,SAAf1B,eAAe;EAAA2B,YAFd;AAAM","names":["HttpClient","LocationService","constructor","http","setStoreName","data","store","getStoreName","setStoreTemp","storeTemp","getStoreTemp","getAllLocations","get","getPosition","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","resp","lng","coords","longitude","lat","latitude","err","factory","providedIn"],"sourceRoot":"","sources":["/Users/ignaciopaz/University/DevWork/ProjectFinal/sistema_II2022.frontend/ClientsView/src/app/Service/location.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Location } from '../Model/location.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocationService {\n  store: Location[] = [];\n  storeTemp: Location[] = [];\n  constructor(private http: HttpClient) {}\n  setStoreName(data: Location[]) {\n    this.store = data;\n  }\n  getStoreName() {\n    return this.store;\n  }\n  setStoreTemp(data: Location[]) {\n    this.storeTemp = data;\n  }\n  getStoreTemp() {\n    return this.storeTemp;\n  }\n\n  getAllLocations() {\n    return this.http.get<any>(\n      'https://serviceprojectspring.herokuapp.com/api/location'\n    );\n  }\n\n  getPosition(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(\n        (resp) => {\n          resolve({ lng: resp.coords.longitude, lat: resp.coords.latitude });\n        },\n        (err) => {\n          reject(err);\n        }\n      );\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}